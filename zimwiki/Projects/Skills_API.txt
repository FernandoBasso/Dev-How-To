Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-10-24T15:43:03-03:00

====== Skills API ======
Created Saturday 24 October 2020

===== Links =====
* ts-node, type: module [[https://github.com/TypeStrong/ts-node/issues/935|bug]].
* [[https://stackoverflow.com/a/63996681/2855955|Property “password” does not exists on type Document]]
* [[https://stackoverflow.com/questions/3825990/http-response-code-for-post-when-resource-already-exists|HTTP response code for POST when resource already exists]] - There is a nice list of HTTP Status Codes.
* [[https://www.digitalocean.com/community/tutorials/how-to-create-retrieve-update-and-delete-records-in-mongodb|How To Create, Retrieve, Update, and Delete Records in MongoDB]]
* [[https://www.digitalocean.com/community/tutorials/nodejs-jwt-expressjs|JSON Web Tokens (JWTs) in Express.js]]
* [[https://www.oreilly.com/content/how-to-design-a-restful-api-architecture-from-a-human-language-spec/|How to design a RESTful API architecture from a human-language spec - O'Reilly]]
* https://apitools.dev/swagger-cli/


===== To Research, TODO =====

==== [...] ⁉️ 🔥️ jwt.sign(user) ====
Should we sign passing all the sign in data? email and password? Could be a security issue.

===== Notes =====
RestFULL.

RE-presentational. Store data in DB, but represent it to the user as JSON or XML.
RE**S**T: State
RES**T**: Transfer the state.


Register:
* POST /users
Sessions (login, logout):
* POST /sessions. POSTing to and endpoint is used to create a resource, so POST to sessions create a new session, that is, produces a login session, returns the token that the user can use to make further authenticated requests to other protected resources.

PUT: Send all the data to update a resource.
PATCH: Send only a patch (not all the data).

The paths and baseUrl compiler options don't cause any remapping of imports paths, they only inform TS of existing mappings, which you'll have to setup with some other tool.

{{./typescript-baseUrl-paths-not-working.png}}


How to make it work:

'''
{
  "compilerOptions": {
    "baseUrl": ".",
    "target": "es6",
    "module": "CommonJS",
    "moduleResolution": "node",
    "rootDir": "./",
    "outDir": "./build",
    "esModuleInterop": true,
    "strict": true
  }
}
'''


And then ''NODE_PATH=. nodemon src/index.ts''.

That is, use only **baseUrl** but **do not use paths**.
https://www.typescriptlang.org/docs/handbook/module-resolution.html#additional-module-resolution-flags


===== Usefull Commands =====

'''
$ npm install --global swagger-cli
$ swagger-cli validate src/openapi/openapi.yml
$ npx yaml2json src/openapi/openapi.yml | jq > src/openapi/openapi.json
'''


===== Data Store, MongoDB =====
Data Store -> Model -> Controller -> View
View -> Controller -> Model -> Data Store

mongo
use skillsapi
db.getCollection('users').find().pretty();

==== MongoError ====
'''
MongoError: E11000 duplicate key error collection:
skillsapi.skills index: title_1 dup key: { title: "JavaScript" }
driver: true,
index: 0,
code: 11000,
keyPattern: { title: 1 },
keyValue: { title: 'JavaScript' }
'''

{{./type-files.png}}

