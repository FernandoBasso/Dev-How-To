Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-01-29T08:48:57-03:00

====== Types ======
Created Wednesday 29 January 2020



==== Nonsensical Type Signature ====
This type signature is nonsense:

'''
fnC :: (Ord a, Ord b) => a -> b -> Bool
fnC x y = x > y
'''

Either ‘a’ or ‘b’ is ‘Ord’. They can't both be ‘Ord’. Fix:

'''
fnC :: Ord a => a -> a -> Bool
'''


A type or datatype is a classification of values or data. Types in Haskell determine what values are members of the type or that inhabit the type. Unlike in other languages, datatypes in Haskell by default do not delimit the operations that can be performed on that data.
