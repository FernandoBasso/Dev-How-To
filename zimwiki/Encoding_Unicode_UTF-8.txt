Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-01-27T08:32:23-03:00

====== Encoding Unicode UTF-8 ======
Created Monday 27 January 2020


===== List of useful unicode codepoints =====

'''
symbol	hex value
‘   	2018   alt-shift-v
’   	2019   alt-shift-b
“   	201c   alt-v
”   	201d   alt-b
λ   	03bb
✔       2714
✓       2713
✗       717
💩      0001f4a9
⊥           22a5		Bottom (used in Lambda and Haskell)
🦕      0001f995     Deno, Dinosaur
'''


===== Space Chars =====
* http://jkorpela.fi/chars/spaces.html

==== Visible Spaces ====

'''
␣  u+2423  OPEN BOX
␢ u+2422  BLANK SYMBOL
␠ u+2420  SYMBOL FOR SPACE
'''

Some texts talking about RegExp sometimes use the Middle Dot to denote a space:

'''
· u+00b7  MIDDLE DOT
'''

Example:

“The pattern ''·foo·'' matches “foo” surrounded by a single space on each side.”

“abc ''␣foo␣'' def”, or even “abc ''␠foo␠'' def”

In Vim, you can set this to make tabs, and especially trailing space (which causes dirty commits) visible.

'''
:set listchars=tab:▸ ,trail:·
'''



===== Alt, AltGr =====

On Linux, Xfce4 at least, type AltGr+Shift v and b for ‘ and ’.

https://superuser.com/questions/361184/xmodmap-six-characters-to-one-key-and-two-layouts

https://superuser.com/questions/189869/xmodmap-six-characters-to-one-key

Setting:

$ xmodmap -e "keycode 38 = a A U201C U201D U2018 U2019"

makes AltGr+a insert ‘ and AltGr+Shift+a insert ’.


===== Links =====
https://www.honeybadger.io/blog/the-rubyist-guide-to-unicode-utf8/



===== Links =====
https://unspecified.wordpress.com/2012/04/19/the-importance-of-language-level-abstract-unicode-strings/

http://www.skybert.net/craftsmanship/utf-8-for-the-impatient/

https://en.wikibooks.org/wiki/Unicode/List_of_useful_symbols

https://www.compart.com/en/unicode/category/Zs

https://www.utf8icons.com/subsets/miscellaneous-symbols-and-pictographs

https://www.compart.com/en/unicode/category/Po

https://tutorialzine.com/2014/12/you-dont-need-icons-here-are-100-unicode-symbols-that-you-can-use

http://www.tldp.org/HOWTO/Unicode-HOWTO.html#toc1
http://xahlee.info/comp/unicode_index.html
https://mathiasbynens.be/notes/javascript-unicode
https://mathiasbynens.be/notes/javascript-escapes
http://speakingjs.com/es5/ch24.html

https://mathiasbynens.be/notes/mysql-utf8mb4 (mysql 3-byte-only utf8, not real utf-8).

http://www.2ality.com/2013/09/javascript-unicode.html

http://www.skybert.net/craftsmanship/utf-8-for-the-impatient/

http://unix.stackexchange.com/questions/108271/how-to-change-encoding-from-non-iso-extended-ascii-text-with-crlf-line-terminat

https://en.wikipedia.org/wiki/Quad_(typography)
https://en.wikipedia.org/wiki/En_(typography)

==== specs w3c and others ====
https://www.w3.org/International/questions/qa-escapes



===== Useful Chars =====


'''
----
👁     \U0001f4a1 eye, toggle plain text password view
✔     \u2714 check mark
✔     \u2713 chec mark
✕     \u2715
✗     \u2717
⏳  \u23f3 sands of time
‴     \u2034 triple prime
‷     \u2037 reversed triple prime
💦  \U0001f4a6 splash sweat
😓  \U0001f613 splash cold sweat
S9834, Hex 266a, Octal 23152
'''
	'''
	♩    9833, Hex 2669, Octal 23151
	♫   9835, Hex 266b, Octal 23153
	♬   9836, Hex 266c, Octal 23154
	----
	'''

'''
♫ Join us and share the software, you'll be free hackers... ♩ ♬
♫ ♩ Linda, só você me fascina! ♬ ♪ ♭
'''
♫ ♩ ♬ ♭ ♪
♫ ♩ Eu te amo, te amo demais
Teu amor só me traz alegria
O teu corpo é minha querência
O meu céu minha estrela guia ♬ ♪

♫ ♩
As pessoas se convencem, de que a sorte me ajudou
Mas plantei cada semente, que o meu coração desejou
♬ ♭ ♪

https://www.youtube.com/watch?v=HaJnYRw5otc

09:52:46    robertmeta | it is for like text-editors
09:52:53    robertmeta | it lets you put it in a stream -- but define it out of stream
09:53:00    robertmeta | it is a "thing from outside of here goes here" marker
09:56:20    robertmeta | kinda a cool little Unicode feature actually
----


elem.textcontent = '\u{0001f4a9}';

html (use the &#x notation):
	<input name='utf8' value='&#x2714;'>

Print from shell:

	echo -e '\u2713'            # u (lowercase)
	echo -e '\U0001f4a9'        # U (UPPERCASE)

Get hex from char:

	echo -n 💩 | hexdump

vim: ga on char
emacs: C-8 C-x = on char

	setxkbmap -option compose:menu

<Multi_key> <less> <3>                  : "♥"   U2665 # BLACK HEART SUIT
<Multi_key> <colon> <parenright>        : "☺"   U263A # WHITE SMILING FACE
<Multi_key> <colon> <parenleft>         : "☹"   U2639 # WHITE FROWNING FACE

Enter Chars by utf-8 code points (terminal, browsers, etc):

Hit ctrl+shift+u folowed by their unicde hexadecimal codepoint.
Examples:

	203d          ‽     INTERROBANG
	2713          ✓     (vim ^kOK)
	2714          ✔
	2717          ✗     (vim ^kxx)
	2718          ✘
	2190          ←
	2192          →
	0001f4a9      💩
	2639          ☹
	263a          ☺
	2665          ♥
	2605          ★
	2606          ☆
	262a          ☪
	066d          ٭
	2260          ≠     (vim ^k=!)
	2400          ␀
	2420          ␠

 ✓ ✗ ← → ☹ ☺ ♥ ★ ☆ ☪ 

<< ✓ ✗ ← → ☹ ☺ ♥ ★ ☆ ☪ ٭ ≠ ␀ ␠ >>

==== tree command chars ====

│   ├── tasklist
│   │   ├── buffer
│   │   │   ├── get.vim
│   │   │   └── set.vim
│   │   └── node.vim
│   └── tasklist.vim

│ \u2502, not the normal "pipe" char.
─ \u2500, not a "dash" or "minus" char.
├ \u251c
└ \u2514


===== Ruby =====

'''
'ção'.length            # 3         works...
'ção'.upcase            # çãO       incorrect...
'ÇÃO'.downcase          # ÇÃo       incorrect...
'''


Using rails active support:

'''
'ção'.mb_chars.length.to_s          # 3
'ção'.mb_chars.upcase.to_s          # ÇÃO
'ÇÃO'.mb_chars.downcase.to_s        # ção
'''


There is also UnicodeUtils gem.

==== ruby 2.4+ partial unicode string support ====

https://www.ruby-lang.org/en/news/2016/12/25/ruby-2-4-0-released/
""
String/Symbol#upcase/downcase/swapcase/capitalize(!) now handle Unicode case mappings instead of only ASCII case mappings.
""

Table with several  test results:
http://blog.honeybadger.io/ruby-s-unicode-support/


===== List of Fonts =====

* [[https://www.nerdfonts.com/font-downloads|Nerd Fonts]]
* [[https://www.jetbrains.com/lp/mono/|JetBrains Mono]], arch/community
* [[https://company.paratype.com/pt-sans-pt-serif|ParaType, PT Mono,]] font used in the awesome book Eloquent JavaScript.












