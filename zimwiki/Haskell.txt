Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-01-23T10:31:25-03:00

====== Haskell ======
Created Thursday 23 January 2020


shapr@haskell-beginners, irc
https://www.youtube.com/watch?v=gMDiKOuwLXw



===== GHCi plain REPL vs haskell-mode REPL =====

In a terminal, with a plain GHCi REPL, I'm able to print functions data types that DO NOT have an instance of ‘Show’.

'''
data Thing = Foo Bar
'''

Note it does not derive ‘Show’. Then, in the haskell-mode repl, I can just output the value of the data cosntructor, and also the resulting function from partial applications.

'''
λ> Foo
Foo :: FooBar
λ> Bar
Bar :: FooBar
λ> (+) 1
(+) 1 :: Num a => a -> a
'''

Explicit ‘print’ does not work, though:

'''
λ> print Bar

<interactive>:24:1-9: error:
    • No instance for (Show FooBar) arising from a use of ‘print’
    • In the expression: print Bar
      In an equation for ‘it’: it = print Bar
'''



